@charset "utf-8";
$fontsize:30px;


*{
    margin: 0;
    padding: 0;
    list-style: none;
}

h2{
    font-size: $fontsize;
}
.box{
    font-size: $fontsize;
}
//第一种方式：实现代码复用
/* css注释 */
.public{
    width: 980px;
    margin: 0 auto;
}

@mixin setheight($h:100px){
    height: $h;
}

#nav{
    @extend .public;
    @include setheight(70px);   
    ul{
        width: 100%;
        height: 80px;
        li{
            float: left;
            margin-right: 10px;
            a{
                display: block;
                color: #000;
                &:hover{
                    color: red;
                }
            }
            a.active{
                color: yellow;
            }
        }
    }
}

p{
    width: 980px;
    @include setheight(90px); 
    span{
        display: block;
        &:hover{
            
        }
    }
    .active{
        color: red;
    }
}

//循环
@for $i from 1 through 3{
    .a#{$i}{color: red;}
}

//数组和循环
$arrdata:(small,33px,22px,1),(middle,40px,20px,2),(big,50px,50px,3);

@each $name,$w,$h,$num in $arrdata{
    .nav-#{$name}{
        width: $w;
        height: $h;
        background: url(img/banner#{$num}.jpg);
    }
}





//常用的mixin函数

@mixin css3($property, $value) {  
    //添加css3代码  各种前缀的添加
    @each $prefix in -webkit-, -moz-, -ms-, -o-, '' {  
        #{$prefix}#{$property}: $value;  
    }  
} 


#foot{
    //添加css3代码各种前缀的添加
    @include css3(transition, 0.5s);
}


@mixin clearfix() {  
    &:before,  
    &:after {  
        content: "";  
        display: table;  
    }  
    &:after {  
        clear: both;  
    }  
}

h3{
    @include clearfix();
}

%triangleBase {  
    _font-size: 0;  
    _line-height: 0;  
    _overflow: hidden;  
    width: 0;  
    height: 0;  
      
}
//regulaTriangle:正三角(dashed默认透明)  
//例子：@include regulaTriangle(top,red);  
@mixin regulaTriangle($derection:bottom, $color: #000, $width: 20px) {  
    @extend %triangleBase;  
    border-width: $width;  
    //向右  
    @if $derection==right {  
        border-style: dashed dashed dashed solid;  
        border-color: transparent transparent transparent $color;  
    }  
    //向左  
    @if $derection==left {  
        border-style: dashed solid dashed dashed;  
        border-color: transparent $color transparent transparent;  
    }  
    //向上  
    @if $derection==top {  
        border-style: dashed dashed solid dashed;  
        border-color: transparent transparent $color transparent;  
    }  
    //向下  
    @if $derection==bottom {  
        border-style: solid dashed dashed dashed;  
        border-color: $color transparent transparent transparent;  
    }  
}  


.down{
    @include regulaTriangle();
}
.up{
    @include regulaTriangle(top,#ccc);
}
